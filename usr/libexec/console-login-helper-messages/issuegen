#!/bin/bash

# Get updated system information, including SSH keys and network devices,
# and generate an issue to display before login.

# Copyright (c) 2019 Fedora CoreOS Authors. All rights reserved.
# Copyright (c) 2013 The CoreOS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
# Modified from the CoreOS repository:
#  * https://github.com/coreos/init/blob/master/scripts/issuegen
#  * https://github.com/coreos/init/blob/master/scripts/sshd_keygen

set -e

PKG_NAME=console-login-helper-messages
ISSUE_SNIPPETS_PATH=${PKG_NAME}/issue.d
ETC_SNIPPETS="/etc/${ISSUE_SNIPPETS_PATH}"
RUN_SNIPPETS="/run/${ISSUE_SNIPPETS_PATH}"
USR_LIB_SNIPPETS="/usr/lib/${ISSUE_SNIPPETS_PATH}"

# Parts of this script write to the `${RUN_SNIPPETS}` directory,
# make sure it is created upfront.
mkdir -p "${RUN_SNIPPETS}"


# Provide key fingerprints via issue.
SSH_DIR=/etc/ssh
# Ensure `${SSH_DIR}` is created and can be searched without error.
mkdir -p "${SSH_DIR}"
for KEY_FILE in $(find "${SSH_DIR}" -name 'ssh_host_*_key') ; do
	ssh-keygen -l -f "${KEY_FILE}"
done | awk '{print "SSH host key: " $2 " " $4}' > "${RUN_SNIPPETS}/21_ssh_host_keys.issue"


# Add/remove data from udev rules.
case "$1" in
	add)
		echo "${2}: \\4{${2}} \\6{${2}}" > "${RUN_SNIPPETS}/22_${2}.issue"
		;;
	remove)
		rm -f "${RUN_SNIPPETS}/22_${2}.issue"
		;;
esac


# Generate a final issue message from compiling the snippets.
# Pick 40 as a prefix as other files can order around it easily.
generated="/run/${PKG_NAME}/40_${PKG_NAME}.issue"
# Remove `${generated}` before writing, so that it is not forever
# appended to.
rm -f "${generated}"
if [[ -d "${ETC_SNIPPETS}" ]]; then
	cat ${ETC_SNIPPETS}/* 2>/dev/null >> "${generated}" || true
fi
if [[ -d "${RUN_SNIPPETS}" ]]; then
	cat ${RUN_SNIPPETS}/* 2>/dev/null >> "${generated}" || true

fi
if [[ -d "${USR_LIB_SNIPPETS}" ]]; then
	cat ${USR_LIB_SNIPPETS}/* 2>/dev/null >> "${generated}" || true
fi
